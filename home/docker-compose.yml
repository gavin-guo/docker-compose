version: '3'

services:

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    # command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --character-set-client-handshake=0
    volumes:
      - ../external_config/mysql:/etc/mysql/conf.d
      - ../data_storage/mysql:/var/lib/mysql
    ports:
      - 3306:3306
    environment:
      - MYSQL_USER=mysql
      - MYSQL_PASSWORD=mysql
      - MYSQL_ROOT_PASSWORD=root

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    volumes:
      - ../data_storage/redis:/data
    ports:
      - 6379:6379

  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    restart: always
    volumes:
      - ../data_storage/rabbitmq:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672

  kafka: # include zookeeper inside, no need to link external zookeeper.
    image: gaven/kafka:1.0.0-alpine
    container_name: kafka
    restart: always
    ports:
      - 2181:2181
      - 9092:9092
      - 9000:9000
      - 9001:9001
    environment:
      # - ADVERTISED_HOST=10.118.118.37
      - ADVERTISED_HOST=localhost
      - ADVERTISED_PORT=9092

  elasticsearch:
    image: elasticsearch:alpine
    container_name: elasticsearch
    restart: always
    volumes:
      - ../data_storage/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  kibana:
    image: kibana
    container_name: kibana
    restart: always
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  filebeat:
    image: gaven/filebeat
    container_name: filebeat
    restart: always
    volumes:
      - ../external_config/filebeat/filebeat.yml:/filebeat.yml
      - /opt/log/stash:/input
    depends_on:
      - elasticsearch

  nexus:
    image: sonatype/nexus3
    container_name: nexus
    restart: always
    volumes:
      # chown -R 200 ../data_storage/nexus
      - ../data_storage/nexus:/nexus-data
    ports:
      - 8081:8081

  registry:
    image: registry
    container_name: registry
    restart: always
    volumes:
      # - ./external_config/registry/certs:/certs
      - ../external_config/registry/auth:/auth
      - ../data_storage/registry:/var/lib/registry
    ports:
      - 80:80
    environment:
      - REGISTRY_HTTP_ADDR=0.0.0.0:80
      # - REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt
      # - REGISTRY_HTTP_TLS_KEY=/certs/domain.key
      - REGISTRY_AUTH=htpasswd
      - REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm
      - REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd
      # docker login registry.gavin.com username/password = gavin/gavin
