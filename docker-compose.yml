version: '3.7'

services:

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    # command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --character-set-client-handshake=0
    volumes:
      - ./external_config/mysql:/etc/mysql/conf.d
      - ./data_storage/mysql:/var/lib/mysql
    ports:
      - 3306:3306
    environment:
      - MYSQL_USER=mysql
      - MYSQL_PASSWORD=mysql
      - MYSQL_ROOT_PASSWORD=root

  zookeeper:
    image: gaven/zookeeper
    container_name: zookeeper
    restart: always
    volumes:
      - ./data_storage/zookeeper/data:/data
      - ./data_storage/zookeeper/datalog:/datalog
    ports:
      - 2181:2181

  kafka:
    image: gaven/kafka:zk-built-in
    container_name: kafka
    restart: always
    volumes:
      - ./data_storage/kafka/zookeeper/data:/opt/zookeeper/data
      - ./data_storage/kafka/zookeeper/datalog:/opt/zookeeper/datalog
      - ./data_storage/kafka/data:/opt/kafka/kafka-logs
    ports:
      - 9092:9092
    environment:
      - ZOO_PORT=12181

  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    restart: always
    volumes:
      - ./data_storage/rabbitmq:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    volumes:
      - ./data_storage/redis:/data
    ports:
      - 6379:6379

  mongo:
    image: mongo:3.7-jessie
    container_name: mongo
    restart: always
    volumes:
      - ./data_storage/mongo:/data/db
    ports:
      - 27017:27017

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.2
    container_name: elasticsearch
    restart: always
    volumes:
      - ./data_storage/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"

  #  kafka:
  #    image: gaven/kafka
  #    container_name: kafka
  #    restart: always
  #    volumes:
  #      - ./data_storage/kafka:/tmp/kafka-logs
  #    ports:
  #      - 9092:9092
  #      # - 9000:9000
  #    environment:
  #      - ZOOKEEPER_CONNECT=zookeeper:2181
  #      - ADVERTISED_LISTENERS=192.168.200.101:9092
  #    depends_on:
  #      - zookeeper

  # codis:
  #   image: gaven/codis
  #   container_name: codis
  #   restart: always
  #   volumes:
  #     - ./data_storage/codis:/data
  #   ports:
  #     - 6380-6385:6380-6385
  #     - 18090:18090
  #     - 19000-19002:19000-19002
  #   environment:
  #     - ZOOKEEPER_CONNECT=zookeeper:2181
  #     - PROXY_NUM=1
  #     - GROUP_NUM=2
  #     - SLAVE_NUM_PER_GROUP=1
  #     - AUTO_ASSIGN_SLOTS=true
  #     - ADD_EXTRA_REDIS=false
  #   depends_on:
  #     - zookeeper

  # elasticsearch1:
  #   image: elasticsearch:alpine
  #   container_name: elasticsearch1
  #   restart: always
  #   volumes:
  #     - ./data_storage/elasticsearch1:/usr/share/elasticsearch/data
  #     - ./external_config/elasticsearch/elasticsearch1.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  #   ports:
  #     - 9200:9200
  #     - 9300:9300
  #   environment:
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  # elasticsearch2:
  #   image: elasticsearch:alpine
  #   container_name: elasticsearch2
  #   restart: always
  #   volumes:
  #     - ./data_storage/elasticsearch2:/usr/share/elasticsearch/data
  #     - ./external_config/elasticsearch/elasticsearch2.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  #   ports:
  #     - 9201:9200
  #     - 9301:9300
  #   environment:
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  # maxwell:
  #   image: gaven/maxwell
  #   container_name: maxwell
  #   restart: always
  #   environment:
  #     - MYSQL_HOST=mysql
  #     - MYSQL_PORT=3306
  #     - MYSQL_USER=root
  #     - MYSQL_PASSWORD=root
  #     - INCLUDE_DBS=xiaoshu
  #     - INCLUDE_TABLES=customer,customer_attr
  #     - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
  #   depends_on:
  #     - mysql
  #     - kafka

  # oracle:
  #   image: sath89/oracle-12c
  #   container_name: oracle
  #   restart: always
  #   volumes:
  #     - ./data_storage/oracle:/u01/app/oracle
  #   ports:
  #     - 1521:1521
  #   environment:
  #     - DBCA_TOTAL_MEMORY=1024

  # kibana:
  #   image: kibana
  #   container_name: kibana
  #   restart: always
  #   ports:
  #     - 5601:5601
  #   environment:
  #     - ELASTICSEARCH_URL=http://elasticsearch:9200
  #   depends_on:
  #     - elasticsearch

  # registry:
  #   image: registry
  #   container_name: registry
  #   restart: always
  #   volumes:
  #     # - ./external_config/registry/certs:/certs
  #     - ./external_config/registry/auth:/auth
  #     - ./data_storage/registry:/var/lib/registry
  #   ports:
  #     - 80:80
  #   environment:
  #     - REGISTRY_HTTP_ADDR=0.0.0.0:80
  #     # - REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt
  #     # - REGISTRY_HTTP_TLS_KEY=/certs/domain.key
  #     - REGISTRY_AUTH=htpasswd
  #     - REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm
  #     - REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd
  #     # docker login registry.gavin.com username/password = gavin/gavin

  # filebeat:
  #   image: gaven/filebeat:5.5.0
  #   container_name: filebeat
  #   restart: always
  #   volumes:
  #     - /opt/log/stash:/input
  #   environment:
  #     - ELASTICSEARCH_ENDPOINT=elasticsearch:9200
  #     - HOSTNAME=macos
  #   depends_on:
  #     - elasticsearch

  # logstash:
  #   image: logstash
  #   container_name: logstash
  #   restart: always
  #   command: logstash -f /config/logstash.conf
  #   # command: logstash -e 'input { udp { port => 4560 codec => json } } output { elasticsearch { hosts => "elasticsearch:9200" } }'
  #   # ports:
  #   #   - 4560:4560/udp
  #   volumes:
  #     - ./external_config/logstash:/config
  #   depends_on:
  #     - elasticsearch

  # haproxy:
  #   image: haproxy:alpine
  #   container_name: haproxy
  #   restart: always
  #   volumes:
  #     - ./external_config/haproxy:/usr/local/etc/haproxy:ro
  #   ports:
  #     - 9999:9999

  # nexus:
  #   image: sonatype/nexus3
  #   container_name: nexus
  #   restart: always
  #   volumes:
  #     # chown -R 200 ../data_storage/nexus
  #     - ./data_storage/nexus:/nexus-data
  #   ports:
  #     - 8081:8081

  # redis-sentinel:
  #   image: yesuagg/redis-sentinel-cluster:0.1.0
  #   container_name: redis-sentinel
  #   restart: always
  #   ports:
  #     - 6379-6381:6379-6381
  #     - 26379-26381:26379-26381

  # redis-cluster:
  #   image: gaven/redis-cluster
  #   container_name: redis-cluster
  #   restart: always
  #   ports:
  #     - 7000-7005:7000-7005
  #   environment:
  #     - CLUSTER_ONLY=true